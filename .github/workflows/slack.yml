name: Slack message

on:
  check_suite:
    types: ['completed']

jobs:
  message:
    name: After CI failure
    if: github.event.check_suite.conclusion != 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Obtain failed CI run
        uses: octokit/request-action@v2.x
        id: get_failed_check_run
        with:
          route: GET /repos/${{ github.repository }}/check-suites/${{ github.event.check_suite.id }}/check-runs?status=completed
          mediaType: '{"previews": ["antiope"]}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # Documentation: https://api.slack.com/methods/chat.postMessage
      - name: Post message on Slack
        run: |
          curl -X POST -H 'Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}' -H 'Content-type: application/json' --data '${{ env.DATA }}' https://slack.com/api/chat.postMessage
        env:
          CHECK_RUN_NAME: ${{ fromJson(steps.get_failed_check_run.outputs.data).check_runs[0].name }}
          CHECK_RUN_URL: ${{ fromJson(steps.get_failed_check_run.outputs.data).check_runs[0].html_url }}
          DATA: '{
                    "channel": "${{ secrets.SLACK_CHANNEL }}",
                    "text": "Check run ${{ fromJson(steps.get_failed_check_run.outputs.data).check_runs[0].name }} was not successful.\n<${{ fromJson(steps.get_failed_check_run.outputs.data).check_runs[0].html_url }}|Visit run>",
                    "attachments": [{
                        "text": "Check run ${{ fromJson(steps.get_failed_check_run.outputs.data).check_runs[0].name }} was not successful.",
                        "color": "#FF0000",
                        "fields": [
                            {
                                "title": "Repository",
                                "value": "${{ github.repository }}",
                                "short": true
                            },
                            {
                                "title": "Run",
                                "value": "${{ fromJson(steps.get_failed_check_run.outputs.data).check_runs[0].id }}",
                                "short": true
                            }
                        ]
                    }]
                 }'